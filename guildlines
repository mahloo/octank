Create a new React application:
- open terminal and type:

npx create-react-app amplifyapp
cd amplifyapp
npm start

-Then initialize git and push your project to a git repo:

git init
git remote add origin git@github.com:username/reponame.git
git add .
git commit -m “initial commit”
git push origin master

-Then go to amplify console and connect it to your git to create your fronend.
-Everytime you make changes in code push it to git:
git add .
git commit -m “changes for v2”
git push origin master


-Now initialize an amplify project inside your project directory:
npm install -g @aws-amplify/cli

-If needed configure amplify:
amplify configure

- go to amplify console and start the backend for your project
- Go back to the Amplify Console Backend environments tab and open the Local setup instructions. Copy the command to your clipboard and open the terminal on your computer.
- Paste the command into your terminal and follow the setup instructions.

? Choose your default editor: Visual Studio Code
? Choose the type of app that you're building javascript
? What javascript framework are you using react
? Source Directory Path:  src 
? Distribution Directory Path: build
? Build Command:  npm run-script build
? Start Command: npm run-script start
? Do you plan on modifying this backend? Y

-to test it try to access console:
amplify console

- now install amplify library for AWs services in backend and related to react:
npm install aws-amplify @aws-amplify/ui-react

- add auth to backend:
amplify add auth

- Now that the authentication service has been configured locally, we can deploy it by running the Amplify push command:
amplify push --y

- now configure react project to add auth:
- The CLI has created and will continue to update a file called aws-exports.js located in the src directory of our project. We will use this file to let the React project know about the different AWS resources that are available in our Amplify project. To configure our app with these resources, open src/index.js and add the following code below the last import:
import Amplify from 'aws-amplify';
import config from './aws-exports';
Amplify.configure(config);

- Add teh auth flow in src/App.js by following update:
import React from 'react';
import logo from './logo.svg';
import './App.css';
import { withAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react'

function App() {
  return (
    <div className="App">
      <header>
        <img src={logo} className="App-logo" alt="logo" />
        <h1>We now have Auth!</h1>
      </header>
      <AmplifySignOut />
    </div>
  );
}

export default withAuthenticator(App);

- In above component we've used the withAuthenticator component. This component will scaffold out an entire user authentication flow allowing users to sign up, sign in, reset their password, and confirm sign in for multifactor authentication (MFA). We've also used the AmplifySignOut component which will render a Sign Out button.

- to run app locally on your browser:
npm start

- setup CI/CD for frontend and backend, go to amplify console. From the navigation sidebar, choose App settings > Build settings and modify it to add the backend section (lines 2-7 in the code below) to your amplify.yml. After making the edits, choose Save.
- From the navigation sidebar, choose App settings > Build settings and modify it to add the backend section (lines 2-7 in the code below) to your amplify.yml. After making the edits, choose Save.
version: 1
backend:
  phases:
    build:
      commands:
        - '# Execute Amplify CLI with the helper script'
        - amplifyPush --simple
frontend:
.....

- Next, update your front end branch to point to the backend environment you just created. Under the branch name, choose Edit, and then point your master branch to the dev backend you just created. Choose Save.


- push changes to git:
git add .
git commit -m “added auth”
git push origin master


If the build failes, check build setting in amplify console (https://github.com/aws-amplify/amplify-cli/issues/6117) and push again.
Also go to App setting/General/edit, and add an IAM service role.

- craete graphql API:
amplify add api 